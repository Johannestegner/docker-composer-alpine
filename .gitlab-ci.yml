include:
  - https://gitlab.com/jitesoft/gitlab-ci-lib/raw/master/Scan/trivy.yml

stages:
  - download
  - deploy
  - scan
  - notify

download:
  stage: download
  image: registry.gitlab.com/jitesoft/dockerfiles/alpine:latest
  variables:
    GIT_STRATEGY: none
  before_script:
    - apk add --no-cache coreutils curl
  script:
    - mkdir downloads
    - cd downloads
    - curl -LOsS https://composer.github.io/installer.sha384sum
    - curl -L -o composer-setup.php https://getcomposer.org/installer
    - sha384sum --check installer.sha384sum
  artifacts:
    expire_in: 2 days
    paths:
      - downloads/

build: &build
  parallel:
    matrix:
      - { VERSION: "7.3", TAGS: "7.3" }
      - { VERSION: "7.4", TAGS: "latest,stable,7,7.4" }
      - { VERSION: "8.0", TAGS: "unstable,rc,8,8.0" }
  image: registry.gitlab.com/jitesoft/dockerfiles/misc:latest
  stage: deploy
  needs:
    - job: download
      artifacts: true
  script:
    - C_VERSION=$(wget -qO- https://getcomposer.org | grep -oP "(?<=<strong>)([0-9]{0,3}(\.?)){3}" | awk 'NR==1{print $1}')
    - TAG_LIST=$(helper "ghcr.io/jitesoft/composer,jitesoft/composer,${CI_REGISTRY_IMAGE}" "${TAGS}")
    - docker buildx build --platform linux/amd64,linux/arm64 --progress plain --push ${TAG_LIST} ${HUB_LIST} --build-arg PHP_VERSION=${VERSION} --build-arg COMPOSER_VERSION=${C_VERSION} .
  tags: [ jitesoft, buildx, protected ]

scan:
  extends: .container_scanning
  needs:
    - job: build
      artifacts: false
  parallel:
    matrix:
      - { IMAGE: "${CI_REGISTRY_IMAGE}:7.3", GIT_STRATEGY: "none" }
      - { IMAGE: "${CI_REGISTRY_IMAGE}:7.4", GIT_STRATEGY: "none" }
      - { IMAGE: "${CI_REGISTRY_IMAGE}:8.0", GIT_STRATEGY: "none" }

trigger_build:
  image: registry.gitlab.com/jitesoft/dockerfiles/alpine:latest
  stage: notify
  before_script:
    - apk add --no-cache curl
  script:
    - "curl -X POST -F token=${NOTIFY_TOKEN} -F ref=master https://gitlab.com/api/v4/projects/4113741/trigger/pipeline"
